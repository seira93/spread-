name: Windows Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_windows.txt
        
    - name: Install PyInstaller
      run: |
        pip install pyinstaller==6.15.0
        
    - name: Build Windows application
      run: |
        pyinstaller --onefile --console --name=GoogleDriveDownloaderWeb --add-data=README.md:. --add-data=USAGE_GUIDE.md:. --add-data=request.py:. --exclude-module=backports --exclude-module=jaraco --exclude-module=pkg_resources --exclude-module=tkinter --exclude-module=matplotlib --exclude-module=numpy simple_gui.py
        
    - name: Create Windows package
      run: |
        if (Test-Path "GoogleDriveDownloaderWeb_Package_Windows") {
          Remove-Item -Recurse -Force "GoogleDriveDownloaderWeb_Package_Windows"
        }
        New-Item -ItemType Directory -Name "GoogleDriveDownloaderWeb_Package_Windows"
        
        Copy-Item "dist\GoogleDriveDownloaderWeb.exe" "GoogleDriveDownloaderWeb_Package_Windows\"
        
        # Copy client_secret.json if it exists, otherwise create a sample
        if (Test-Path "client_secret.json") {
          Copy-Item "client_secret.json" "GoogleDriveDownloaderWeb_Package_Windows\"
        } else {
          $sampleContent = '{"installed":{"client_id":"YOUR_CLIENT_ID.apps.googleusercontent.com","project_id":"your-project-id","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"YOUR_CLIENT_SECRET","redirect_uris":["http://localhost:8080","http://localhost:8090","http://localhost:9000"]}}'
          Set-Content -Path "GoogleDriveDownloaderWeb_Package_Windows\client_secret.json" -Value $sampleContent
        }
        
        Copy-Item "request.py" "GoogleDriveDownloaderWeb_Package_Windows\"
        Copy-Item "README.md" "GoogleDriveDownloaderWeb_Package_Windows\"
        Copy-Item "USAGE_GUIDE.md" "GoogleDriveDownloaderWeb_Package_Windows\"
        Copy-Item "README_WINDOWS.md" "GoogleDriveDownloaderWeb_Package_Windows\"
        
        Set-Content -Path "GoogleDriveDownloaderWeb_Package_Windows\start_application.bat" -Value "@echo off`necho Google Drive Image Downloader Web Version Starting...`necho.`necho Browser will open automatically. If not, manually access http://localhost:8080`necho.`necho To stop the application, close this window.`necho.`npause`nGoogleDriveDownloaderWeb.exe`npause"
        
    - name: Create ZIP artifact
      run: |
        powershell Compress-Archive -Path "GoogleDriveDownloaderWeb_Package_Windows" -DestinationPath "GoogleDriveDownloaderWeb_Package_Windows.zip"
        
    - name: Upload Windows package
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Package
        path: GoogleDriveDownloaderWeb_Package_Windows.zip
        
    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        files: GoogleDriveDownloaderWeb_Package_Windows.zip
        tag_name: v${{ github.run_number }}
        name: Windows Build v${{ github.run_number }}
        body: |
          ## Windows Build v${{ github.run_number }}
          
          ### ðŸ“¦ What's included
          - GoogleDriveDownloaderWeb.exe (Windows executable)
          - start_application.bat (Launch script)
          - client_secret.json (Google API credentials)
          - README files and documentation
          
          ### ðŸš€ How to use
          1. Download and extract the ZIP file
          2. Double-click `start_application.bat`
          3. Open http://localhost:8080 in your browser
          4. Configure settings and run
          
          ### ðŸ”§ Requirements
          - Windows 10/11
          - No additional software required (standalone executable)
          
          ### ðŸ“‹ Build Info
          - Built on: ${{ github.event.head_commit.timestamp }}
          - Commit: ${{ github.sha }}
          - Branch: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 